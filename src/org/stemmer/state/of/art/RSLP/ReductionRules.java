package org.stemmer.state.of.art.RSLP;
import org.stemmer.state.of.art.RSLP.Exception;
import org.stemmer.state.of.art.RSLP.Rule;;

public class ReductionRules{

	public final Rule[] PLURAL = {
		new Rule("ns", 1, "m", null),
		new Rule("ões", 3, "ão", null),
		new Rule("ães", 1, "ão", Exception.PLURAL_AES),
		new Rule("ais", 1, "al", Exception.PLURAL_AIS),
		new Rule("éis", 2, "el", null),
		new Rule("eis", 2, "el", Exception.PLURAL_EIS),
		new Rule("óis", 2, "ol", null),
		new Rule("is", 2, "il", Exception.PLURAL_IS),
		//Minimum Stem Size modified for 2 because the replacement and the last character are equals
		new Rule("les", 2, "l", null),
		//Minimum Stem Size modified for 2 because the replacement and the last character are equals
		new Rule("res", 2, "r", Exception.PLURAL_RES),
		new Rule("s", 2, "", Exception.PLURAL_S)
	};

	public final Rule[] FEMININE = {
		new Rule("ona", 3, "ão", Exception.FEMININE_ONA),
		new Rule("ã", 2, "ão", Exception.FEMININE_A),
		new Rule("ora", 3, "or", null),
		new Rule("na", 4, "no", Exception.FEMININE_NA),
		new Rule("inha", 3, "inho", Exception.FEMININE_INHA),
		new Rule("esa", 3, "ês", Exception.FEMININE_ESA),
		new Rule("osa", 3, "oso", Exception.FEMININE_OSA),
		new Rule("íaca", 3, "íaco", null),
		new Rule("ica", 3, "ico", Exception.FEMININE_ICA),
		new Rule("ada", 2, "ado", Exception.FEMININE_ADA),
		new Rule("ida", 3, "ido", Exception.FEMININE_IDA),
		new Rule("ída", 3, "ido", Exception.FEMININE_IIDA),
		new Rule("ima", 3, "imo", Exception.FEMININE_IMA),
		new Rule("iva", 3, "ivo", Exception.FEMININE_IVA),
		new Rule("eira", 3, "eiro", Exception.FEMININE_EIRA)
	};

	public final Rule[] DEGREE = {
		new Rule("díssimo", 5, "", null),
		new Rule("abilíssimo", 5, "", null),
		new Rule("íssimo", 3, "", null),
		new Rule("érrimo", 4, "", null),
		new Rule("zinho", 2, "", null),
		new Rule("quinho", 4, "c", null),
		new Rule("uinho", 4, "", null),
		new Rule("adinho", 3, "", null),
		new Rule("inho", 3, "", Exception.DEGREE_INHO),
		new Rule("alhão", 4, "", null),
		new Rule("uça", 4, "", null),
		new Rule("aço", 4, "", Exception.DEGREE_ACO),
		new Rule("adão", 4, "", null),
		new Rule("ázio", 3, "", Exception.DEGREE_AZIO),
		new Rule("arraz", 4, "", null),
		new Rule("arra", 3, "", null),
		new Rule("zão", 2, "", Exception.DEGREE_ZAO),
		new Rule("ão", 3, "", Exception.DEGREE_AO)
	};

	public final Rule[] NOUN = {
		new Rule("encialista", 4, "", null),
		new Rule("alista", 5, "", null),
		new Rule("agem", 3, "", Exception.NOUN_AGEM),
		new Rule("iamento", 4, "", Exception.NOUN_AMENTO),
		new Rule("amento", 3, "", Exception.NOUN_AMENTO ),
		new Rule("imento", 3, "", null),
		new Rule("alizado", 4, "", null),
		new Rule("atizado", 4, "", null),
		new Rule("izado", 5, "", Exception.NOUN_IZADO),
		new Rule("ativo", 4, "", Exception.NOUN_ATIVO),
		new Rule("tivo", 4, "", Exception.NOUN_TIVO),
		new Rule("ivo", 4, "", Exception.NOUN_IVO),
		new Rule("ado", 2, "", Exception.NOUN_ADO),
		new Rule("ido", 3, "", Exception.NOUN_IDO),
		new Rule("ador", 3, "", null),
		new Rule("edor", 3, "", null),
		new Rule("idor", 4, "", Exception.NOUN_IDOR),
		new Rule("atória", 5, "", null),
		new Rule("or", 2, "", Exception.NOUN_OR),
		new Rule("abilidade", 5, "", null),
		new Rule("icionista", 4, "", null),
		new Rule("cionista", 5, "", null),
		new Rule("ional", 4, "", null),
		new Rule("ência", 3, "", null),
		new Rule("ância", 4, "", Exception.NOUN_ANCIA),
		new Rule("edouro", 3, "", null),
		new Rule("queiro", 3, "c", null),
		new Rule("eiro", 3, "", Exception.NOUN_EIRO),
		new Rule("oso", 3, "", Exception.NOUN_OSO),
		new Rule("alizaç", 5, "", null),
		new Rule("ismo", 3, "", Exception.NOUN_ISMO),
		new Rule("izaç", 5, "", Exception.NOUN_IZAC),
		new Rule("aç", 3, "", Exception.NOUN_AC),
		new Rule("iç", 3, "", Exception.NOUN_IC),
		new Rule("ário", 3, "", Exception.NOUN_ARIO),
		new Rule("ério", 6, "", null),
		new Rule("ês", 4, "", null),
		new Rule("eza", 3, "", null),
		new Rule("ez", 4, "", null),
		new Rule("esco", 4, "", null),
		new Rule("ante", 2, "", Exception.NOUN_ANTE),
		new Rule("ástico", 4, "", Exception.NOUN_ASTICO),
		new Rule("ático", 3, "", null),
		new Rule("ico", 4, "", Exception.NOUN_ICO),
		new Rule("ividade", 5, "", null),
		new Rule("idade", 5, "", Exception.NOUN_IDADE),
		new Rule("oria", 4, "", Exception.NOUN_ORIA),
		new Rule("encial", 5, "", null),
		new Rule("ista", 4, "", null),
		new Rule("quice", 4, "c", null),
		new Rule("ice", 4, "", Exception.NOUN_ICE),
		new Rule("íaco", 3, "", null),
		new Rule("ente", 4, "", Exception.NOUN_ENTE),
		new Rule("inal", 3, "", Exception.NOUN_INAL),
		new Rule("ano", 4, "", null),
		new Rule("ável", 2, "", Exception.NOUN_AVEL),
		new Rule("ível", 5, "", Exception.NOUN_IVEL),
		new Rule("ura", 4, "", Exception.NOUN_URA),
		new Rule("ual", 3, "", Exception.NOUN_UAL),
		new Rule("ial", 3, "", null),
		new Rule("al", 4, "", Exception.NOUN_AL)
	};

	public final Rule[] VERB = {
		new Rule("aríamo", 2, "", null),
		new Rule("ássemo", 2, "", null),
		new Rule("eríamo", 2, "", null),
		new Rule("êssemo", 2, "", null),
		new Rule("iríamo", 3, "", null),
		new Rule("íssemo", 3, "", null),
		new Rule("áramo", 2, "", null),
		new Rule("árei", 2, "", null),
		new Rule("aremo", 2, "", null),
		new Rule("ariam", 2, "", null),
		new Rule("aríei", 2, "", null),
		new Rule("ássei", 2, "", null),
		new Rule("assem", 2, "", null),
		new Rule("ávamo", 2, "", null),
		new Rule("êramo", 3, "", null),
		new Rule("eremo", 3, "", null),
		new Rule("eriam", 3, "", null),
		new Rule("eríei", 3, "", null),
		new Rule("êssei", 3, "", null),
		new Rule("essem", 3, "", null),
		new Rule("íramo", 3, "", null),
		new Rule("iremo", 3, "", null),
		new Rule("iriam", 3, "", null),
		new Rule("iríei", 3, "", null),
		new Rule("íssei", 3, "", null),
		new Rule("issem", 3, "", null),
		new Rule("ando", 2, "", null),
		new Rule("endo", 3, "", null),
		new Rule("indo", 3, "", null),
		new Rule("ondo", 3, "", null),
		new Rule("aram", 2, "", null),
		new Rule("arde", 2, "", null),
		new Rule("arei", 2, "", null),
		new Rule("arem", 2, "", null),
		new Rule("aria", 2, "", null),
		new Rule("armo", 2, "", null),
		new Rule("asse", 2, "", null),
		new Rule("aste", 2, "", null),
		new Rule("avam", 2, "", Exception.VERB_AVAM),
		new Rule("ávei", 2, "", null),
		new Rule("eram", 3, "", null),
		new Rule("erde", 3, "", null),
		new Rule("erei", 3, "", null),
		new Rule("êrei", 3, "", null),
		new Rule("erem", 3, "", null),
		new Rule("eria", 3, "", null),
		new Rule("ermo", 3, "", null),
		new Rule("esse", 3, "", null),
		new Rule("este", 3, "", Exception.VERB_ESTE),
		new Rule("íamo", 3, "", null),
		new Rule("iram", 3, "", null),
		new Rule("íram", 3, "", null),
		new Rule("irde", 2, "", null),
		new Rule("irei", 3, "", Exception.VERB_IREI),
		new Rule("irem", 3, "", Exception.VERB_IREM),
		new Rule("iria", 3, "", null),
		new Rule("irmo", 3, "", null),
		new Rule("isse", 3, "", null),
		new Rule("iste", 4, "", null),
		new Rule("amo", 2, "", null),
		new Rule("ara", 2, "", Exception.VERB_ARA),
		new Rule("ará", 2, "", Exception.VERB_ARAA),
		new Rule("are", 2, "", Exception.VERB_ARE),
		new Rule("ava", 2, "", Exception.VERB_AVA),
		new Rule("emo", 2, "", null),
		new Rule("era", 3, "", Exception.VERB_ERA),
		new Rule("erá", 3, "", null),
		new Rule("ere", 3, "", Exception.VERB_ERE),
		new Rule("iam", 3, "", Exception.VERB_IAM),
		new Rule("íei", 3, "", null),
		new Rule("imo", 3, "", Exception.VERB_IMO),
		new Rule("ira", 3, "", Exception.VERB_IRA),
		new Rule("irá", 3, "", null),
		new Rule("ire", 3, "", Exception.VERB_IRE),
		new Rule("omo", 3, "", null),
		new Rule("ai", 2, "", null),
		new Rule("am", 2, "", null),
		new Rule("ear", 4, "", Exception.VERB_EAR),
		new Rule("ar", 2, "", Exception.VERB_AR),
		new Rule("uei", 3, "", null),
		new Rule("ei", 3, "", null),
		new Rule("em", 2, "", Exception.VERB_EM),
		new Rule("er", 2, "", Exception.VERB_ER),
		new Rule("eu", 3, "", Exception.VERB_EU),
		new Rule("ia", 3, "", Exception.VERB_IA),
		new Rule("ir", 3, "", Exception.VERB_IR),
		new Rule("iu", 3, "", null),
		new Rule("ou", 3, "", null),
		new Rule("i", 3, "", null)
	};

}